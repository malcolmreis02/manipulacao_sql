# -*- coding: utf-8 -*-
"""teste_sql_malcolm.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1F8S6e2-wn1idEAqZxkOtm9J_CPCzcyKf

# Case para vaga de Est√°gio em Risco

**Malcolm dos Reis Alves Pereira**

### Objetivo

Esse projeto est√° sendo feito com o objetivo de validar minhas habilidades na linguagem em SQL para o processo seletivo.

### Conex√£o e Banco de Dados

Importando as bibliotecas necess√°rias para a execu√ß√£o da atividade
"""

import duckdb as db # Usar os comandos sql
import pandas as pd # Ler a planilha original

"""Como o objetivo do projeto √© verificar as minhas habilidades com os comandos em SQL, nessa atividade vamos utilizar o DuckDB que oferece uma vasta gama de funcionalidades dessa linguagem.

A escolha dessa ferramenta foi feita pois ela, al√©m da possibilidade fazer uma conex√£o com um banco de dados que ainda n√£o existe, suporta comandos que deixam todo o c√≥digo mais limpo (os citados nas dicas presentes no enunciado desse case) e que s√£o suportados em todos os sistemas de gerenciamento de banco de dados.

Vamos iniciar o projeto fazendo a leitura dos dados contidos na planilha "Consultas" do arquivo enviado, onde est√£o os dados em formato wide (as vari√°veis est√£o desempilhadas)
"""

from google.colab import drive
drive.mount('/content/drive')

# Lendo os dados (para reproduzir, ajuste o caminho da pasta em que o arquivo com os dados esta)
df = pd.read_excel("/content/drive/MyDrive/Colab Notebooks/case_supplier/Teste SQL.xlsx", sheet_name="Consultas")
df

"""Assim, √© necess√°rio fazer a conex√£o com algum banco de dados para podermos inserir e manipular as tabelas necess√°rias nele."""

conn = db.connect("casesupplier") # Fazendo a conexao

conn.execute("CREATE OR REPLACE TABLE consultas AS SELECT * FROM df") # Colocando a tabela original no banco de dados
conn.execute("SELECT * FROM consultas").fetchdf() # Query basica

"""### Tranformando a tabela em formato longo

Para conseguirmos ajustar as retas de regress√£o linear e obtermos os interceptos e as inclina√ß√µes delas, √© necess√°rio transformar essa tabela wide em uma tabela com formato longo, onde cada vari√°vel √© uma coluna. Temos que, ent√£o, basicamente, colocar as observa√ß√µes de cada consulta (que est√£o dispostas em linha) em fun√ß√£o da vari√°vel "CONSULTA" definida nesse momento, resultando assim, em uma coluna "CONSULTA" e uma coluna "OBS" (de "observa√ß√£o").

Al√©m disso, temos que deixar a coluna que cont√©m o n√∫mero da consulta num√©rica. Faremos isso, ap√≥s deixar a tabela em formato longo, retirando os caracteres das observa√ß√µes da coluna CONSULTA, deixando apenas o n√∫mero da consulta e convertendo a coluna para INT (para ser poss√≠vel utilizar a fun√ß√£o REGR_SLOPE e REGR_INTECEPT posteriormente).
"""

# Colocar as observacoes em funcao da consulta usando as colunas
# "Consulta1", "Consulta2", ... da tabela "consultas";

# Substitundo a palavra "CONSULTA" presente nas observacoes da variavel
# "CONSULTA" por nada (removendo os caracteres e deixando so o numero);

# Convertento a variavel "CONSULTA" para numerica com esta coluna apresentando
# apenas os numeros da respectiva consulta.

conn.execute("""CREATE OR REPLACE TABLE consultas_long AS
             (SELECT CLIENTE,DATA,CAST(REGEXP_REPLACE(CONSULTA, 'CONSULTA', '') AS INTEGER) AS CONSULTA,OBS
              FROM consultas
              UNPIVOT
              (OBS FOR CONSULTA IN
              (Consulta1,Consulta2,Consulta3, Consulta4,Consulta5,Consulta6,Consulta7,Consulta8,Consulta9,Consulta10,Consulta11)))""")

conn.execute("SELECT * FROM consultas_long").fetchdf() # Query basica

"""### Ajuste da reta de regress√£o linear

Agora que temos a tabela no formato longo, podemos ajustar uma reta de regress√£o linear que segue o seguinte modelo:

ùò† = aùòü + b

Sendo o "b" o intercepto, o "a" a inclina√ß√£o da reta, o Y as observa√ß√µes (vari√°vel resposta) e o X a consulta (a vari√°vel preditora).

Para isso, foi utilizadas as fun√ß√µes REGR_SLOPE e REGR_INTECEPT que considera que a reta esta sendo ajustada pelo M√©todo dos M√≠nimos Quadrados para realizar o c√°lculo desses par√¢metros (inclina√ß√£o e intercepto, respectivamente).
"""

# Criar uma classe que identifica quando a consulta e menor ou igual a 3 e
# e quando e maior ou igual a 4

# Extrair a inclinacao e o intercepto da reta agrupando as observacoes pela
# classe criada

# Pegando o resultado com apenas dois numeros decimais

conn.execute("""SELECT classe_consultas,
                       ROUND(REGR_SLOPE(OBS,CONSULTA),2) AS inclinacao,
                       ROUND(REGR_INTERCEPT(OBS,CONSULTA),2) AS intercepto
                FROM
                (SELECT *,
                CASE WHEN CONSULTA BETWEEN 4 AND 11 THEN '4-11'
                ELSE '1-3'
                END AS classe_consultas
                FROM consultas_long)
                GROUP BY classe_consultas""").fetchdf()

"""Nesse caso, temos para as tr√™s primeiras consultas, temos o intercepto igual a 19 e a inclina√ß√£o da reta igual a -5.5, sendo, ent√£o, o ajuste da reta dado por:

ùò† = -5.50 *‚ãÖ* ùòü + 19.00

E para o outro caso, para as consultas que ocorreram depois da terceira consulta, temos uma reta ajustada dada por:

ùò† = -0.35 ‚ãÖ ùòü + 4.96

### Soma das observa√ß√µes

Al√©m do ajuste das retas de regress√£o linear, foi pedido que fosse entregue a soma das observa√ß√µes das seis primeiras consultas.

Para esse procedimento, utilizamos a fun√ß√£o de soma do SQL (SUM) nas observa√ß√µes condicionando apenas √†quelas as quais o n√∫mero da consulta estivesse entre 1 e 6.

Temos, ent√£o, que a soma das 6 primeiras consultas √© igual a 31.
"""

# Somar (SUM) apenas as observacoes onde (WHERE) o numero da consulta esta
# entre (BETWEEN) 1 e 6

conn.execute("""SELECT SUM(OBS) AS SOMA
            FROM consultas_long
            WHERE CONSULTA BETWEEN 1 AND 6""").fetchdf()

"""### Finaliza√ß√£o

J√° tendo obtido todas as medidas que nos interessavam neste banco de dados, podemos fechar a conex√£o feita.
"""

# Guardando o dataframe para usarmos na analise grafica
df_long = conn.execute("SELECT * FROM consultas_long").fetchdf()
medidas = conn.execute("""SELECT classe_consultas,
                       ROUND(REGR_SLOPE(OBS,CONSULTA),2) AS inclinacao,
                       ROUND(REGR_INTERCEPT(OBS,CONSULTA),2) AS intercepto
                FROM
                (SELECT *,
                CASE WHEN CONSULTA BETWEEN 4 AND 11 THEN '4-11'
                ELSE '1-3'
                END AS classe_consultas
                FROM consultas_long)
                GROUP BY classe_consultas""").fetchdf()

conn.close() # Fechando a conexao

"""### Extra: An√°lise Gr√°fica

"""

import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np

# Dfs filtrados
df_filtered1 = df_long[df_long['CONSULTA'].isin(range(1, 4))]
df_filtered2 = df_long[df_long['CONSULTA'].isin(range(4, 12))]

# Criar do grafico
plt.figure(figsize=(10, 5))

# Calcular os valores y para a linha usando a equacao da reta
x1_val = df_filtered1['CONSULTA']
y1_val = medidas.iloc[0][2] + medidas.iloc[0][1] * x1_val

x2_val = df_filtered2['CONSULTA']
y2_val = medidas.iloc[1][2] + medidas.iloc[1][1] * x2_val


# Plot da reta
plt.plot(x1_val, y1_val, color='red', linewidth=2)
plt.plot(x2_val, y2_val, color='red', linewidth=2)

# Grafico de pontos
sns.scatterplot(data=df_filtered1, x='CONSULTA', y='OBS', color='blue', s=30)
sns.scatterplot(data=df_filtered2, x='CONSULTA', y='OBS', color='blue', s=30)

# Ajustar o eixo x
plt.xticks(ticks=range(1,12))

plt.title('Reta ajustada para as consultas de 1 a 11')
plt.xlabel('Consulta')
plt.ylabel('Observa√ß√£o')

"""Apesar de que, olhando para o segundo gr√°fico, eu n√£o considero que exista uma associa√ß√£o linear entre as observa√ß√µes e o n√∫mero da consulta, utilizando as retas como uma forma de analisar a taxa de decaimento das observa√ß√µes em fun√ß√£o do n√∫mero da consulta, pode-se observar que essa taxa diminui com o aumento do n√∫mero das consultas. Isto √©, se num primeiro momento (nas primeiras consultas) tivemos uma queda brusca de observa√ß√µes, no segundo momento (nas consultas 4 a 11) isso j√° n√£o aconteceu, havendo at√© aumento das obseva√ß√µes em um determinado intervalo."""